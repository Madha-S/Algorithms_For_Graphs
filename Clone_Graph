"""
# Definition for a Node.
class Node(object):
    def __init__(self, val = 0, neighbors = None):
        self.val = val
        self.neighbors = neighbors if neighbors is not None else []
"""

class Solution(object):
    def cloneGraph(self, node):
        if not node:
            return node
        q = deque([node])
        seen = {}
        seen[node] = Node(node.val, [])
        while q:
            cur = q.popleft()
            for n in cur.neighbors:
                if n not in seen:
                    seen[n] = Node(n.val, [])
                    q.append(n)
                seen[cur].neighbors.append(seen[n])
        return seen[node]  
